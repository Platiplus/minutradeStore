(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngx-share/core'), require('@ngx-share/button')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@ngx-share/core', '@ngx-share/button'], factory) :
	(factory((global['ngx-share'] = global['ngx-share'] || {}, global['ngx-share'].buttons = {}),global.ng.core,global.core$1,global.button));
}(this, (function (exports,core,core$1,button) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var ShareButtonsComponent = (function () {
    /**
     * @param {?} share
     */
    function ShareButtonsComponent(share) {
        this.share = share;
        /**
         * Share Buttons array
         */
        this.buttons = [];
        /**
         * Buttons to include
         */
        this.includeButtons = this.share.buttons;
        /**
         * Buttons to exclude
         */
        this.excludeButtons = [];
        /**
         * Number of shown buttons
         */
        this.shownButtons = this.includeButtons.length;
        /**
         * Disable more/less buttons
         */
        this.showAll = false;
        this.theme = this.share.theme;
        /**
         * Show buttons icon
         */
        this.showIcon = true;
        /**
         * Show buttons name
         */
        this.showText = false;
        /**
         * Show buttons share count
         */
        this.showCount = false;
        /**
         * Buttons size
         */
        this.size = 0;
        /**
         * Share count event
         */
        this.count = new core.EventEmitter();
        /**
         * Share dialog opened event
         */
        this.opened = new core.EventEmitter();
        /**
         * Share dialog closed event
         */
        this.closed = new core.EventEmitter();
    }
    Object.defineProperty(ShareButtonsComponent.prototype, "include", {
        /**
         * @param {?} includeButtons
         * @return {?}
         */
        set: function (includeButtons) {
            var _this = this;
            this.includeButtons = includeButtons;
            this.buttons = this.includeButtons.filter(function (btn) { return _this.excludeButtons.indexOf(btn) < 0; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareButtonsComponent.prototype, "exclude", {
        /**
         * @param {?} excludeButtons
         * @return {?}
         */
        set: function (excludeButtons) {
            var _this = this;
            this.excludeButtons = excludeButtons;
            this.buttons = this.includeButtons.filter(function (btn) { return _this.excludeButtons.indexOf(btn) < 0; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareButtonsComponent.prototype, "setShownButtons", {
        /**
         * @param {?} shownCount
         * @return {?}
         */
        set: function (shownCount) {
            this.shownButtons = shownCount;
            this.totalButtons = this.buttons.length;
            /** Set showAll to true if shown buttons count = selected buttons count */
            this.showAll = this.shownButtons === this.totalButtons + 1;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ShareButtonsComponent.prototype.ngOnInit = function () {
        var _this = this;
        /**  if user didn't select the buttons use all */
        if (!this.excludeButtons.length) {
            this.buttons = this.includeButtons.filter(function (btn) { return _this.excludeButtons.indexOf(btn) < 0; });
        }
    };
    /**
     * @return {?}
     */
    ShareButtonsComponent.prototype.more = function () {
        this.totalButtons = this.shownButtons;
        this.shownButtons = this.buttons.length;
        this.showAll = true;
    };
    /**
     * @return {?}
     */
    ShareButtonsComponent.prototype.less = function () {
        this.shownButtons = this.totalButtons;
        this.showAll = false;
    };
    return ShareButtonsComponent;
}());
ShareButtonsComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'share-buttons',
                template: "<div class=\"sb-group sb-{{theme}}\">\n\n  <share-button *ngFor=\"let button of buttons | slice: 0:shownButtons\" [button]=\"button\" [theme]=\"theme\" [url]=\"url\" [title]=\"title\"\n    [description]=\"description\" [image]=\"image\" [tags]=\"tags\" [showCount]=\"showCount\" [showIcon]=\"showIcon\" [showText]=\"showText\"\n    [size]=\"size\" (opened)=\"opened.emit($event)\" (closed)=\"closed.emit($event)\" (count)=\"count.emit($event)\"></share-button>\n\n  <div class=\"sb-button sb-{{theme}}\">\n\n    <!-- SHOW LESS BUTTON -->\n\n    <button *ngIf=\"showAll && shownButtons === buttons.length\"\n            [style.fontSize.px]=\"(1 + size/20) * 14\"\n            class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"less()\">\n\n      <div class=\"sb-inner\">\n        <div class=\"sb-content\">\n          <div class=\"sb-icon\">\n            <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n      </div>\n    </button>\n\n    <!-- SHOW MORE BUTTON -->\n\n    <button *ngIf=\"!showAll && shownButtons < buttons.length\"\n            [style.fontSize.px]=\"(1 + size/20) * 14\"\n            class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"more()\">\n\n      <div class=\"sb-inner\">\n        <div class=\"sb-content\">\n          <div class=\"sb-icon\">\n            <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n      </div>\n    </button>\n\n  </div>\n</div>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
ShareButtonsComponent.ctorParameters = function () { return [
    { type: core$1.ShareButtons, },
]; };
ShareButtonsComponent.propDecorators = {
    "theme": [{ type: core.Input },],
    "include": [{ type: core.Input, args: ['include',] },],
    "exclude": [{ type: core.Input, args: ['exclude',] },],
    "setShownButtons": [{ type: core.Input, args: ['show',] },],
    "url": [{ type: core.Input },],
    "title": [{ type: core.Input },],
    "description": [{ type: core.Input },],
    "image": [{ type: core.Input },],
    "tags": [{ type: core.Input },],
    "showIcon": [{ type: core.Input },],
    "showText": [{ type: core.Input },],
    "showCount": [{ type: core.Input },],
    "size": [{ type: core.Input },],
    "count": [{ type: core.Output },],
    "opened": [{ type: core.Output },],
    "closed": [{ type: core.Output },],
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @param {?} config
 * @return {?}
 */
function ShareButtonsFactory(config) {
    return new core$1.ShareButtons(config);
}
var ShareButtonsModule = (function () {
    function ShareButtonsModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    ShareButtonsModule.forRoot = function (config) {
        return {
            ngModule: ShareButtonsModule,
            providers: [
                { provide: core$1.CONFIG, useValue: config },
                {
                    provide: core$1.ShareButtons,
                    useFactory: ShareButtonsFactory,
                    deps: [core$1.CONFIG]
                }
            ]
        };
    };
    return ShareButtonsModule;
}());
ShareButtonsModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [
                    ShareButtonsComponent
                ],
                imports: [
                    button.ShareButtonModule
                ],
                exports: [
                    button.ShareButtonModule,
                    ShareButtonsComponent
                ]
            },] },
];
/** @nocollapse */
ShareButtonsModule.ctorParameters = function () { return []; };

exports.ShareButtonsFactory = ShareButtonsFactory;
exports.ShareButtonsModule = ShareButtonsModule;
exports.ShareButtonsComponent = ShareButtonsComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-share-buttons.umd.js.map
