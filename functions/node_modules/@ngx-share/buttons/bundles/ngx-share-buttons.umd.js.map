{
  "version": 3,
  "file": "ngx-share-buttons.umd.js",
  "sources": [
    "ng://@ngx-share/buttons/src/share-buttons.module.ts",
    "ng://@ngx-share/buttons/src/share-buttons.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\n\r\nimport { ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { ShareButtonModule } from '@ngx-share/button';\r\n\r\nimport { ShareButtonsComponent } from './share-buttons.component';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonsComponent\r\n  ],\r\n  imports: [\r\n    ShareButtonModule\r\n  ],\r\n  exports: [\r\n    ShareButtonModule,\r\n    ShareButtonsComponent\r\n  ]\r\n})\r\nexport class ShareButtonsModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonsModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ShareButtons } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-buttons',\r\n  template: `<div class=\"sb-group sb-{{theme}}\">\r\n\r\n  <share-button *ngFor=\"let button of buttons | slice: 0:shownButtons\" [button]=\"button\" [theme]=\"theme\" [url]=\"url\" [title]=\"title\"\r\n    [description]=\"description\" [image]=\"image\" [tags]=\"tags\" [showCount]=\"showCount\" [showIcon]=\"showIcon\" [showText]=\"showText\"\r\n    [size]=\"size\" (opened)=\"opened.emit($event)\" (closed)=\"closed.emit($event)\" (count)=\"count.emit($event)\"></share-button>\r\n\r\n  <div class=\"sb-button sb-{{theme}}\">\r\n\r\n    <!-- SHOW LESS BUTTON -->\r\n\r\n    <button *ngIf=\"showAll && shownButtons === buttons.length\"\r\n            [style.fontSize.px]=\"(1 + size/20) * 14\"\r\n            class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"less()\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n\r\n    <!-- SHOW MORE BUTTON -->\r\n\r\n    <button *ngIf=\"!showAll && shownButtons < buttons.length\"\r\n            [style.fontSize.px]=\"(1 + size/20) * 14\"\r\n            class=\"sb-wrapper sb-more sb-show-icon\" (click)=\"more()\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n\r\n  </div>\r\n</div>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButtonsComponent implements OnInit {\r\n\r\n  /** Share Buttons array */\r\n  buttons: string[] = [];\r\n\r\n  /** Buttons to include */\r\n  includeButtons: string[] = this.share.buttons;\r\n\r\n  /** Buttons to exclude */\r\n  excludeButtons: string[] = [];\r\n\r\n  /** Number of shown buttons */\r\n  shownButtons = this.includeButtons.length;\r\n\r\n  /** Number of included buttons */\r\n  totalButtons;\r\n\r\n  /** Disable more/less buttons */\r\n  showAll = false;\r\n\r\n  @Input() theme = this.share.theme;\r\n\r\n  @Input('include')\r\n  set include(includeButtons: string[]) {\r\n    this.includeButtons = includeButtons;\r\n    this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\r\n  }\r\n\r\n  @Input('exclude')\r\n  set exclude(excludeButtons: string[]) {\r\n    this.excludeButtons = excludeButtons;\r\n    this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\r\n  }\r\n\r\n  @Input('show')\r\n  set setShownButtons(shownCount: number) {\r\n    this.shownButtons = shownCount;\r\n    this.totalButtons = this.buttons.length;\r\n    /** Set showAll to true if shown buttons count = selected buttons count */\r\n    this.showAll = this.shownButtons === this.totalButtons + 1;\r\n  }\r\n\r\n  /** Set share URL */\r\n  @Input() url: string;\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Show buttons icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show buttons name */\r\n  @Input() showText = false;\r\n\r\n  /** Show buttons share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Buttons size */\r\n  @Input() size = 0;\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(public share: ShareButtons) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /**  if user didn't select the buttons use all */\r\n    if (!this.excludeButtons.length) {\r\n      this.buttons = this.includeButtons.filter((btn) => this.excludeButtons.indexOf(btn) < 0);\r\n    }\r\n  }\r\n\r\n  more() {\r\n    this.totalButtons = this.shownButtons;\r\n    this.shownButtons = this.buttons.length;\r\n    this.showAll = true;\r\n  }\r\n\r\n  less() {\r\n    this.shownButtons = this.totalButtons;\r\n    this.showAll = false;\r\n  }\r\n\r\n}\r\n"
  ],
  "names": [
    "ShareButtonModule",
    "NgModule",
    "CONFIG",
    "ShareButtons"
  ],
  "mappings": ";;;;;;;;;;;;;;;QC+HA,IAAA,CAAA,KAAA,GAAwC,KAAxC,CAAA;;;;;;;;;;;;;;;;;;;;;QAtDA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoDA;IAGA,MAAA,CAAA,cAAA,CAAA,qBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;;;;;QAlDM,GAAN,EAAA,UAAA,cAAA,EAAA;YACQ,IAAR,KAAA,GAAA,IAAA,CAAA;YACQ,IAAR,CAAA,cAAA,GAAA,cAAA,CAA6C;;;;;;IAI7C,MAAA,CAAA,cAAA,CAAA,qBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;;;;;;;;YAMA,IAAA,CAAA,OAAsB,GAAtB,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,EAAA,OAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;SACA;QACI,UAAJ,EAAA,IAAA;;KAEA,CAAA,CAAA;;;;;;;YAsCQ,IAAR,CAAa,YAAb,GAA4B,UAA5B,CAAA;YACM,IAAI,CAAC,YAAX,GAA0B,IAA1B,CAAA,OAAA,CAAA,MAAA,CAAA;;YAEA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA,KAAA,IAAA,CAAA,YAAA,GAAA,CAAA,CAAA;;;;KAEA,CAAA,CAAA;;;;IAIA,qBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;;;;YAEA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,EAAA,OAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;SACA;KACA,CAAA;;;;IAvIA,qBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;QACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,YAAA,CAAA;QACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwCC,CAAD;;;;;;;;;AAuBA,SAAA,mBAAA,CAAA,MAAA,EAAA;IAEA,OAAA,IAAAG,mBAAA,CAAA,MAAA,CAAA,CAAA;CAMA;AAMA,IAAA,kBAAA,IAAA,YAAA;IASA,SAAA,kBAAA,GAAA;KAGA;;;;;IASA,kBAAA,CAAA,OAAQ,GAAR,UAAA,MAAA,EAAA;QAGA,OAAA;YAGA,QAAA,EAAA,kBAAA;YAGA,SAAA,EAAA;gBAGA,EAAA,OAAA,EAAAD,aAAA,EAAA,QAAA,EAAA,MAAA,EAAA;gBAGA;;;;;;;KD7HA,CAAA;;;;IAOA,EAAA,IAAA,EAAAD,aAAA,EAAA,IAAA,EAAA,CAAoC;gBACpC,YAA0B,EAA1B;oBACA,qBAAA;iBAcA;;;;;oBACAD,wBAAA;oBACA,qBAAA;iBACA;aACA,EAAA,EAAA;CACA,CAAA;;AAEA,kBAAA,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;"
}
