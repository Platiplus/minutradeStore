{"version":3,"file":"core.js","sources":["../../../../.temp/packages/@ngx-meta/core/src/meta.loader.ts","../../../../.temp/packages/@ngx-meta/core/src/util.ts","../../../../.temp/packages/@ngx-meta/core/src/meta.service.ts","../../../../.temp/packages/@ngx-meta/core/src/meta.guard.ts","../../../../.temp/packages/@ngx-meta/core/index.ts"],"sourcesContent":["// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\nexport abstract class MetaLoader {\r\n  abstract get settings(): MetaSettings;\r\n}\r\n\r\nexport class MetaStaticLoader implements MetaLoader {\r\n  get settings(): MetaSettings {\r\n    return this.providedSettings;\r\n  }\r\n\r\n  constructor(private readonly providedSettings: MetaSettings = {\r\n    pageTitlePositioning: PageTitlePositioning.PrependPageTitle,\r\n    defaults: {}\r\n  }) {\r\n  }\r\n}\r\n","// libs\r\nimport { Observable } from 'rxjs/Observable';\r\n// TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n// import { $$observable as symbolObservable } from 'rxjs/symbol/observable';\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\r\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n  // return !!(obj && obj[symbolObservable]);\r\n  return !!obj && typeof obj.subscribe === 'function';\r\n}\r\n","// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n// libs\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/fromPromise';\r\n\r\n// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaLoader } from './meta.loader';\r\nimport { isObservable, isPromise } from './util';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\n@Injectable()\r\nexport class MetaService {\r\n  protected readonly settings: MetaSettings;\r\n  private readonly isMetaTagSet: any;\r\n\r\n  constructor(readonly loader: MetaLoader,\r\n              private readonly title: Title,\r\n              private readonly meta: Meta) {\r\n    this.settings = loader.settings;\r\n    this.isMetaTagSet = {};\r\n  }\r\n\r\n  setTitle(title: string, override = false): void {\r\n    const title$ = title\r\n      ? this.callback(title)\r\n      : Observable.of('');\r\n\r\n    title$\r\n      .subscribe((res: string) => {\r\n        let fullTitle = '';\r\n\r\n        if (!res) {\r\n          const defaultTitle$ = (this.settings.defaults && this.settings.defaults['title'])\r\n            ? this.callback(this.settings.defaults['title'])\r\n            : Observable.of('');\r\n\r\n          defaultTitle$\r\n            .subscribe((defaultTitle: string) => {\r\n              if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n                this.callback(this.settings.applicationName)\r\n                  .subscribe((applicationName: string) => {\r\n                    fullTitle = applicationName ? this.getTitleWithPositioning(defaultTitle, applicationName) : defaultTitle;\r\n                    this.updateTitle(fullTitle);\r\n                  });\r\n              else\r\n                this.updateTitle(defaultTitle);\r\n            });\r\n        } else if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n          this.callback(this.settings.applicationName)\r\n            .subscribe((applicationName: string) => {\r\n              fullTitle = applicationName ? this.getTitleWithPositioning(res, applicationName) : res;\r\n              this.updateTitle(fullTitle);\r\n            });\r\n        else\r\n          this.updateTitle(res);\r\n      });\r\n  }\r\n\r\n  setTag(key: string, value: string): void {\r\n    if (key === 'title')\r\n      throw new Error(`Attempt to set ${key} through \"setTag\": \"title\" is a reserved tag name. `\r\n        + 'Please use `MetaService.setTitle` instead.');\r\n\r\n    value = value || ((this.settings.defaults && this.settings.defaults[key])\r\n      ? this.settings.defaults[key]\r\n      : '');\r\n\r\n    const value$ = (key !== 'og:locale' && key !== 'og:locale:alternate')\r\n      ? this.callback(value)\r\n      : Observable.of(value);\r\n\r\n    value$\r\n      .subscribe((res: string) => {\r\n        this.updateTag(key, res);\r\n      });\r\n  }\r\n\r\n  update(currentUrl: string, metaSettings?: any): void {\r\n    if (!metaSettings) {\r\n      const fallbackTitle = this.settings.defaults\r\n        ? (this.settings.defaults['title'] || this.settings['applicationName'])\r\n        : this.settings['applicationName'];\r\n\r\n      this.setTitle(fallbackTitle, true);\r\n    } else {\r\n      if (metaSettings.disabled) {\r\n        this.update(currentUrl);\r\n\r\n        return;\r\n      }\r\n\r\n      this.setTitle(metaSettings.title, metaSettings.override);\r\n\r\n      Object.keys(metaSettings)\r\n        .forEach(key => {\r\n          let value = metaSettings[key];\r\n\r\n          if (key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings['og:locale'];\r\n            this.updateLocales(currentLocale, metaSettings[key]);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n    }\r\n\r\n    if (this.settings.defaults)\r\n      Object.keys(this.settings.defaults)\r\n        .forEach(key => {\r\n          let value = this.settings.defaults[key];\r\n\r\n          if ((metaSettings && (key in this.isMetaTagSet || key in metaSettings)) || key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings ? metaSettings['og:locale'] : undefined;\r\n            this.updateLocales(currentLocale, value);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n\r\n    const url = ((this.settings.applicationUrl || '/') + currentUrl)\r\n      .replace(/(https?:\\/\\/)|(\\/)+/g, '$1$2')\r\n      .replace(/\\/$/g, '');\r\n\r\n    this.setTag('og:url', url || '/');\r\n  }\r\n\r\n  removeTag(key: string): void {\r\n    this.meta.removeTag(key);\r\n  }\r\n\r\n  private callback(value: string): Observable<string> {\r\n    if (this.settings.callback) {\r\n      const value$ = this.settings.callback(value);\r\n\r\n      if (!isObservable(value$))\r\n        return isPromise(value$)\r\n          ? Observable.fromPromise(value$)\r\n          : Observable.of(value$);\r\n\r\n      return value$;\r\n    }\r\n\r\n    return Observable.of(value);\r\n  }\r\n\r\n  private getTitleWithPositioning(title: string, applicationName: string): string {\r\n    switch (this.settings.pageTitlePositioning) {\r\n      case PageTitlePositioning.AppendPageTitle:\r\n        return applicationName + this.settings.pageTitleSeparator + title;\r\n      case PageTitlePositioning.PrependPageTitle:\r\n        return title + this.settings.pageTitleSeparator + applicationName;\r\n      default:\r\n        throw new Error(`Invalid pageTitlePositioning specified [${this.settings.pageTitlePositioning}]!`);\r\n    }\r\n  }\r\n\r\n  private updateTitle(title: string): void {\r\n    this.title.setTitle(title);\r\n    this.meta.updateTag({\r\n      property: 'og:title',\r\n      content: title\r\n    });\r\n  }\r\n\r\n  private updateLocales(currentLocale: string, availableLocales: string): void {\r\n    currentLocale = currentLocale || (this.settings.defaults\r\n      ? this.settings.defaults['og:locale']\r\n      : '');\r\n\r\n    if (currentLocale && this.settings.defaults)\r\n      this.settings.defaults['og:locale'] = currentLocale.replace(/_/g, '-');\r\n\r\n    // TODO: set HTML lang attribute - https://github.com/ngx-meta/core/issues/32\r\n    // const html = this.document.querySelector('html');\r\n    // html.setAttribute('lang', currentLocale);\r\n\r\n    const elements = this.meta.getTags('property=\"og:locale:alternate\"');\r\n\r\n    elements.forEach((element: any) => {\r\n      this.meta.removeTagElement(element);\r\n    });\r\n\r\n    if (currentLocale && availableLocales)\r\n      availableLocales.split(',')\r\n        .forEach((locale: string) => {\r\n          if (currentLocale.replace(/-/g, '_') !== locale.replace(/-/g, '_'))\r\n            this.meta.addTag({\r\n              property: 'og:locale:alternate',\r\n              content: locale.replace(/-/g, '_')\r\n            });\r\n        });\r\n  }\r\n\r\n  private updateTag(key: string, value: string): void {\r\n    if (key.lastIndexOf('og:', 0) === 0)\r\n      this.meta.updateTag({\r\n        property: key,\r\n        content: key === 'og:locale' ? value.replace(/-/g, '_') : value\r\n      });\r\n    else\r\n      this.meta.updateTag({\r\n        name: key,\r\n        content: value\r\n      });\r\n\r\n    this.isMetaTagSet[key] = true;\r\n\r\n    if (key === 'description')\r\n      this.meta.updateTag({\r\n        property: 'og:description',\r\n        content: value\r\n      });\r\n    else if (key === 'author')\r\n      this.meta.updateTag({\r\n        property: 'og:author',\r\n        content: value\r\n      });\r\n    else if (key === 'publisher')\r\n      this.meta.updateTag({\r\n        property: 'og:publisher',\r\n        content: value\r\n      });\r\n    else if (key === 'og:locale') {\r\n      const availableLocales = this.settings.defaults\r\n        ? this.settings.defaults['og:locale:alternate']\r\n        : '';\r\n\r\n      this.updateLocales(value, availableLocales);\r\n      this.isMetaTagSet['og:locale:alternate'] = true;\r\n    } else if (key === 'og:locale:alternate') {\r\n      const currentLocale = this.meta.getTag('property=\"og:locale\"').content;\r\n\r\n      this.updateLocales(currentLocale, value);\r\n      this.isMetaTagSet['og:locale'] = true;\r\n    }\r\n  }\r\n}\r\n","// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot } from '@angular/router';\r\n\r\n// module\r\nimport { MetaService } from './meta.service';\r\n\r\n@Injectable()\r\nexport class MetaGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly meta: MetaService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const url = state.url;\r\n\r\n    const metaSettings = (route && route.data && route.data['meta'])\r\n      ? route.data['meta']\r\n      : undefined;\r\n\r\n    this.meta.update(url, metaSettings);\r\n\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n","// angular\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n// module\r\nimport { MetaGuard } from './src/meta.guard';\r\nimport { MetaLoader, MetaStaticLoader } from './src/meta.loader';\r\nimport { MetaService } from './src/meta.service';\r\n\r\nexport * from './src/models/meta-settings';\r\nexport * from './src/models/page-title-positioning';\r\nexport * from './src/meta.guard';\r\nexport * from './src/meta.loader';\r\nexport * from './src/meta.service';\r\n\r\n// for AoT compilation\r\nexport function metaFactory(): MetaLoader {\r\n  return new MetaStaticLoader();\r\n}\r\n\r\n@NgModule()\r\nexport class MetaModule {\r\n  static forRoot(configuredProvider: any = {\r\n    provide: MetaLoader,\r\n    useFactory: (metaFactory)\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule: MetaModule,\r\n      providers: [\r\n        configuredProvider,\r\n        MetaGuard,\r\n        MetaService\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: MetaModule) {\r\n    if (parentModule)\r\n      throw new Error('MetaModule already loaded; import in root module only.');\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}